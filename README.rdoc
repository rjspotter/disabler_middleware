= disabler_middleware

== Usage

  Rack::Disabler.new(app) do |disabler|
    disabler.store = Redis.new
    disabler.extractor = {|env| Rack::Request.new(env).path}
    disabler.responses =  {'freeloader' =>  [402, {}, ["Payment Required"]],'douchebag'  =>  [403, {}, ["Forbidden"]]} 
  end

this is an example (these are the defaults) but it should give you some idea of how it works.  

Put simply; each request runs the extractor the resulting value is looked up in the data store (Redis or anything else that responds to #get(key)) if theres a return string it finds the matching response in the responses store and returns that otherwise it calls the app.

== Contributing to disabler_middleware
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Randall Potter. See LICENSE.txt for
further details.

